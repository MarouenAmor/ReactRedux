{"ast":null,"code":"import { ADD_TASK, DELETE_TASK, EDIT_TASK, FILTER_TASKS, SET_CURRENT_TASK, TOGGLE_COMPLETED_TASK } from \"../actions/constants/types\";\nconst initialState = {\n  todos: [],\n  current: null,\n  filteredTodos: []\n};\n\nconst taskReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_TASK:\n      return { ...state,\n        todos: [...state.todos, action.payload]\n      };\n\n    case EDIT_TASK:\n      return { ...state,\n        todos: state.todos.map(todo => todo.id === action.payload.id ? { ...todo,\n          description: action.payload.description\n        } : todo)\n      };\n\n    case DELETE_TASK:\n      return { ...state,\n        todos: state.todos.filter(todo => todo.id !== action.payload)\n      };\n\n    case SET_CURRENT_TASK:\n      return { ...state,\n        current: action.payload\n      };\n\n    case FILTER_TASKS:\n      return { ...state,\n        filteredTodos: action.payload === \"completed\" ? state.todos.filter(todo => todo.isDone) : action.payload === \"uncompleted\" ? state.todos.filter(todo => !todo.isDone) : state.todos\n      };\n\n    case TOGGLE_COMPLETED_TASK:\n      return { ...state,\n        todos: state.todos.map(todo => todo.id === action.payload ? { ...todo,\n          isDone: !todo.isDone\n        } : todo)\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default taskReducer;","map":{"version":3,"sources":["C:/Users/PC/Desktop/GoMyCode/ReactRedux/Reduxx-main/src/reducers/taskReducer.js"],"names":["ADD_TASK","DELETE_TASK","EDIT_TASK","FILTER_TASKS","SET_CURRENT_TASK","TOGGLE_COMPLETED_TASK","initialState","todos","current","filteredTodos","taskReducer","state","action","type","payload","map","todo","id","description","filter","isDone"],"mappings":"AAAA,SACEA,QADF,EAEEC,WAFF,EAGEC,SAHF,EAIEC,YAJF,EAKEC,gBALF,EAMEC,qBANF,QAOO,4BAPP;AASA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,EADY;AAEnBC,EAAAA,OAAO,EAAE,IAFU;AAGnBC,EAAAA,aAAa,EAAE;AAHI,CAArB;;AAMA,MAAMC,WAAW,GAAG,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBL,YAAyB;AAAA,MAAXM,MAAW;;AACpD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKb,QAAL;AACE,aAAO,EACL,GAAGW,KADE;AAELJ,QAAAA,KAAK,EAAE,CAAC,GAAGI,KAAK,CAACJ,KAAV,EAAiBK,MAAM,CAACE,OAAxB;AAFF,OAAP;;AAKF,SAAKZ,SAAL;AACE,aAAO,EACL,GAAGS,KADE;AAELJ,QAAAA,KAAK,EAAEI,KAAK,CAACJ,KAAN,CAAYQ,GAAZ,CAAiBC,IAAD,IACrBA,IAAI,CAACC,EAAL,KAAYL,MAAM,CAACE,OAAP,CAAeG,EAA3B,GACI,EAAE,GAAGD,IAAL;AAAWE,UAAAA,WAAW,EAAEN,MAAM,CAACE,OAAP,CAAeI;AAAvC,SADJ,GAEIF,IAHC;AAFF,OAAP;;AASF,SAAKf,WAAL;AACE,aAAO,EACL,GAAGU,KADE;AAELJ,QAAAA,KAAK,EAAEI,KAAK,CAACJ,KAAN,CAAYY,MAAZ,CAAoBH,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYL,MAAM,CAACE,OAAhD;AAFF,OAAP;;AAKF,SAAKV,gBAAL;AACE,aAAO,EACL,GAAGO,KADE;AAELH,QAAAA,OAAO,EAAEI,MAAM,CAACE;AAFX,OAAP;;AAKF,SAAKX,YAAL;AACE,aAAO,EACL,GAAGQ,KADE;AAELF,QAAAA,aAAa,EACXG,MAAM,CAACE,OAAP,KAAmB,WAAnB,GACIH,KAAK,CAACJ,KAAN,CAAYY,MAAZ,CAAoBH,IAAD,IAAUA,IAAI,CAACI,MAAlC,CADJ,GAEIR,MAAM,CAACE,OAAP,KAAmB,aAAnB,GACAH,KAAK,CAACJ,KAAN,CAAYY,MAAZ,CAAoBH,IAAD,IAAU,CAACA,IAAI,CAACI,MAAnC,CADA,GAEAT,KAAK,CAACJ;AAPP,OAAP;;AAUF,SAAKF,qBAAL;AACE,aAAO,EACL,GAAGM,KADE;AAELJ,QAAAA,KAAK,EAAEI,KAAK,CAACJ,KAAN,CAAYQ,GAAZ,CAAiBC,IAAD,IACrBA,IAAI,CAACC,EAAL,KAAYL,MAAM,CAACE,OAAnB,GAA6B,EAAE,GAAGE,IAAL;AAAWI,UAAAA,MAAM,EAAE,CAACJ,IAAI,CAACI;AAAzB,SAA7B,GAAiEJ,IAD5D;AAFF,OAAP;;AAOF;AACE,aAAOL,KAAP;AAjDJ;AAmDD,CApDD;;AAsDA,eAAeD,WAAf","sourcesContent":["import {\n  ADD_TASK,\n  DELETE_TASK,\n  EDIT_TASK,\n  FILTER_TASKS,\n  SET_CURRENT_TASK,\n  TOGGLE_COMPLETED_TASK\n} from \"../actions/constants/types\";\n\nconst initialState = {\n  todos: [],\n  current: null,\n  filteredTodos: []\n};\n\nconst taskReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_TASK:\n      return {\n        ...state,\n        todos: [...state.todos, action.payload]\n      };\n\n    case EDIT_TASK:\n      return {\n        ...state,\n        todos: state.todos.map((todo) =>\n          todo.id === action.payload.id\n            ? { ...todo, description: action.payload.description }\n            : todo\n        )\n      };\n\n    case DELETE_TASK:\n      return {\n        ...state,\n        todos: state.todos.filter((todo) => todo.id !== action.payload)\n      };\n\n    case SET_CURRENT_TASK:\n      return {\n        ...state,\n        current: action.payload\n      };\n\n    case FILTER_TASKS:\n      return {\n        ...state,\n        filteredTodos:\n          action.payload === \"completed\"\n            ? state.todos.filter((todo) => todo.isDone)\n            : action.payload === \"uncompleted\"\n            ? state.todos.filter((todo) => !todo.isDone)\n            : state.todos\n      };\n\n    case TOGGLE_COMPLETED_TASK:\n      return {\n        ...state,\n        todos: state.todos.map((todo) =>\n          todo.id === action.payload ? { ...todo, isDone: !todo.isDone } : todo\n        )\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default taskReducer;\n"]},"metadata":{},"sourceType":"module"}